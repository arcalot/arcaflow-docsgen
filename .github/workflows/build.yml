name: Build
on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:
jobs:
  golangci-lint:
    name: golangci-lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@3cfe3a4abbb849e10058ce4af15d205b6da42804 # v4
        with:
          # Hard-coding version due to this bug: https://github.com/golangci/golangci-lint-action/issues/535
          version: v1.52.2
  test:
    name: go test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - name: Set up Go
        uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5
        with:
          go-version: 1.18
      - name: Set up gotestfmt
        uses: GoTestTools/gotestfmt-action@v2
      - uses: actions/cache@ab5e6d0c87105b4c9c2047343972218f562e4319 # v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: go-test-${{ hashFiles('**/go.sum') }}
          restore-keys: go-test-
      - name: Run go test
        run: |
          set -euo pipefail
          go generate
          go test -coverprofile /tmp/coverage.out -json -v ./... 2>&1 | tee /tmp/gotest.log | gotestfmt
          echo "# Code coverage summary" > /tmp/coverage.md
          echo "|File|Type|Coverage|" >> /tmp/coverage.md
          echo "|----|----|--------|" >> /tmp/coverage.md
          go tool cover -func /tmp/coverage.out | sed -e 's/\s\s*/|/g' -e 's/^/|/g' -e 's/$/|/g' >> /tmp/coverage.md
          
          cat /tmp/coverage.md >> $GITHUB_STEP_SUMMARY
          echo "::group::Code coverage summary"
          go tool cover -func /tmp/coverage.out
          echo "::endgroup::"
      - name: Upload test log
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4
        if: always()
        with:
          name: test-results
          path: |
            /tmp/gotest.log
            /tmp/coverage.out
            /tmp/coverage.md
          if-no-files-found: error
  release:
    name: release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs:
      - golangci-lint
      - test
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5
        with:
          go-version: 1.18
      - name: Build and release
        uses: goreleaser/goreleaser-action@7ec5c2b0c6cdda6e8bbb49444bc797dd33d74dd8 # v5
        if: startsWith(github.event.ref, 'refs/tags/')
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GOPROXY: direct
          GOSUMDB: off
      - name: Build
        uses: goreleaser/goreleaser-action@7ec5c2b0c6cdda6e8bbb49444bc797dd33d74dd8 # v5
        if: ${{ !startsWith(github.event.ref, 'refs/tags/') }}
        with:
          distribution: goreleaser
          version: latest
          args: build --snapshot
        env:
          GOPROXY: direct
          GOSUMDB: off
      - name: Upload artifacts
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4
        with:
          name: binaries
          path: dist
